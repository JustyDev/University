import rumps
import os
import time
import threading
from pathlib import Path
import subprocess


class LogCleanerApp(rumps.App):
    def __init__(self):
        super(LogCleanerApp, self).__init__("üßπ", "Log Cleaner")
        self.folder_to_clean = None
        self.cleaning_thread = None
        self.auto_clean_thread = None
        self.is_cleaning = False
        self.auto_clean_enabled = False
        self.auto_clean_interval = 60

        self.auto_clean_menu_item = rumps.MenuItem("–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É (1 –º–∏–Ω)")
        self.menu = [
            "–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏",
            "–û—á–∏—Å—Ç–∏—Ç—å .log —Ñ–∞–π–ª—ã —Å–µ–π—á–∞—Å",
            None,
            self.auto_clean_menu_item,
            "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É",
            None,
            "–í—ã—Ö–æ–¥"
        ]

        self.start_auto_clean_monitor()

    def start_auto_clean_monitor(self):
        self.auto_clean_thread = threading.Thread(target=self._auto_clean_monitor, daemon=True)
        self.auto_clean_thread.start()

    def _auto_clean_monitor(self):
        while True:
            if self.auto_clean_enabled and self.folder_to_clean and not self.is_cleaning:
                self.is_cleaning = True
                self._clean_logs(auto_mode=True)
                self.is_cleaning = False

            time.sleep(self.auto_clean_interval)

    @rumps.clicked("–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
    def select_folder(self, _):
        applescript = '''
        tell application "System Events"
            activate
            set folderPath to POSIX path of (choose folder with prompt "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ .log —Ñ–∞–π–ª–æ–≤")
        end tell
        '''

        try:
            result = subprocess.run(['osascript', '-e', applescript],
                                    capture_output=True, text=True, check=True)

            folder_path = result.stdout.strip()

            if folder_path:
                self.folder_to_clean = folder_path
                rumps.notification(
                    title="Log Cleaner",
                    subtitle="–ü–∞–ø–∫–∞ –≤—ã–±—Ä–∞–Ω–∞",
                    message=f"–ë—É–¥–µ—Ç –æ—á–∏—â–∞—Ç—å—Å—è: {self.folder_to_clean}"
                )
        except subprocess.CalledProcessError:
            pass
        except Exception as e:
            rumps.notification(
                title="Log Cleaner",
                subtitle="–û—à–∏–±–∫–∞",
                message=f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É: {str(e)}"
            )

    @rumps.clicked("–û—á–∏—Å—Ç–∏—Ç—å .log —Ñ–∞–π–ª—ã —Å–µ–π—á–∞—Å")
    def clean_logs_now(self, _):
        if not self.folder_to_clean:
            rumps.notification(
                title="Log Cleaner",
                subtitle="–û—à–∏–±–∫–∞",
                message="–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏"
            )
            return

        if self.is_cleaning:
            rumps.notification(
                title="Log Cleaner",
                subtitle="–£–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è",
                message="–û—á–∏—Å—Ç–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è"
            )
            return

        self.is_cleaning = True
        self.cleaning_thread = threading.Thread(target=lambda: self._clean_logs(auto_mode=False))
        self.cleaning_thread.start()

    def _clean_logs(self, auto_mode=False):
        try:
            log_files = list(Path(self.folder_to_clean).glob("**/*.log"))
            count = len(log_files)

            if count == 0:
                rumps.notification(
                    title="Log Cleaner",
                    subtitle="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                    message="–§–∞–π–ª—ã .log –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
                )
            else:
                for log_file in log_files:
                    os.remove(log_file)

                rumps.notification(
                    title="Log Cleaner",
                    subtitle="–£—Å–ø–µ—à–Ω–æ",
                    message=f"–£–¥–∞–ª–µ–Ω–æ {count} .log —Ñ–∞–π–ª–æ–≤"
                )
        except Exception as e:
            if not auto_mode:
                rumps.notification(
                    title="Log Cleaner",
                    subtitle="–û—à–∏–±–∫–∞",
                    message=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {str(e)}"
                )
        finally:
            if not auto_mode:
                self.is_cleaning = False

    @rumps.clicked("–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É (1 –º–∏–Ω)")
    def toggle_auto_clean(self, sender):
        self.auto_clean_enabled = not self.auto_clean_enabled

        if self.auto_clean_enabled:
            sender.title = "–í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –ø–∞–ø–∫–∞
            if not self.folder_to_clean:
                rumps.notification(
                    title="Log Cleaner",
                    subtitle="–í–Ω–∏–º–∞–Ω–∏–µ",
                    message="–ü–∞–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞. –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å."
                )
            else:
                rumps.notification(
                    title="Log Cleaner",
                    subtitle="–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞",
                    message=f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –≤–∫–ª—é—á–µ–Ω–∞"
                )
        else:
            sender.title = "–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É (1 –º–∏–Ω)"
            rumps.notification(
                title="Log Cleaner",
                subtitle="–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞",
                message="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞"
            )

    @rumps.clicked("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É")
    def show_current_folder(self, _):
        auto_status = "–≤–∫–ª—é—á–µ–Ω–∞" if self.auto_clean_enabled else "–≤—ã–∫–ª—é—á–µ–Ω–∞"

        if self.folder_to_clean:
            rumps.notification(
                title="Log Cleaner",
                subtitle=f"–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ {auto_status}",
                message=f"–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: {self.folder_to_clean}"
            )
        else:
            rumps.notification(
                title="Log Cleaner",
                subtitle=f"–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ {auto_status}",
                message="–ü–∞–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞"
            )

    @rumps.clicked("–í—ã—Ö–æ–¥")
    def quit_app(self, _):
        rumps.quit_application()


if __name__ == "__main__":
    LogCleanerApp().run()
